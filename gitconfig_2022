[user]
#name = Pawel Palucki
#email = pawel.palucki@sap.com
name = Pawel Palucki
email = pawel.palucki@sap.com

[alias]
# dont add -n to logs l/lg because it disables possibility to asks for logs from master...
l = log --oneline --decorate 
lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(blue)%an%Creset' --abbrev-commit --date-order 
lgd = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci)%Creset %C(blue)%an%Creset' --abbrev-commit --date-order
st = status
ci = commit
d = difftool
dd = difftool -t dirdiff -d --no-prompt
ds = diff --stat
b = branch -vv
branches = branch -vv
branchall = branch -a -vv
branchesall = branch -a -vv
branchesdate = for-each-ref --sort=committerdate refs/heads/ --format='%(committerdate:short) (%(committerdate:relative)) %(refname:short)'
branchesdateall = for-each-ref --sort=committerdate refs/remotes/ --format='%(committerdate:short) (%(committerdate:relative)) %(refname:short)'

remotes = remote -v

co = checkout --no-guess
cob = checkout -b
ciam = commit -a -m
ciamwip = commit -a -m WIP
ciav = commit -a --verbose
cim = commit -m
civ = commit --verbose
ca = commit --amend
caa = commit -a --amend
unstash = stash pop
mt = mergetool

# moved to aliases
# grepall = git rev-list --all | xargs git grep 
#
upstream = rev-parse --abbrev-ref --symbolic-full-name @{u}
# or for scripting git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
# http://stackoverflow.com/questions/89332/how-to-recover-a-dropped-stash-in-git
# recover = log --graph --oneline --decorate $( git fsck --no-reflog | awk '/dangling commit/ {print $3}' )

# For Github (get a pull request
# gpr = '!sh -c "git fetch origin pull/${1}/head:pr/${1}" -'
# with a command like this 
# git config --global alias.gpr '!sh -c "git fetch origin pull/${1}/head:pr/${1}" -'
# doesn't not WORK!!!
# without need to fetch refspec before and it won't allow you to update this in future
gpr = !sh -c \"git fetch origin pull/${1}/head:pr/${1}\" -

# unieversal pull request from github
# git gpr intel 356
gpremote = !sh -c \"git fetch ${1} pull/${2}/head:pr/${2}\" -


# tags + commits (-d --derefernce)
#tags = show-ref --abbrev=7 --tag -d 
tags = for-each-ref --sort=creatordate --format '%(refname)  -   %(creatordate)' refs/tags
tagslog = log --no-walk --tags --pretty='%h %d %s' --decorate=full
	
[safe]
	directory = /root/ppalucki/bcc
	directory = /root/ppalucki/bcc/libbpf-tools/blazesym
	directory = /root/ppalucki/bcc/src/cc/libbpf
	directory = /root/ppalucki/bcc/libbpf-tools/bpftool
	directory = /root/ppalucki/bcc
	directory = /root/ppalucki/bcc/libbpf-tools/blazesym
	directory = /root/ppalucki/bcc/src/cc/libbpf
	directory = /root/ppalucki/bcc/libbpf-tools/bpftool
	directory = /root/ppalucki/bcc
	directory = /root/ppalucki/bcc/libbpf-tools/blazesym
	directory = /root/ppalucki/bcc/src/cc/libbpf
	directory = /root/ppalucki/bcc/libbpf-tools/bpftool

[difftool "dirdiff"]
    cmd = vim -f '+next' '+execute \"DirDiff\" argv(0) argv(1)' $LOCAL $REMOTE
    options = --symlinks

[oh-my-zsh]
# optimize globally git_prompt in ZSH prompt
# https://github.com/ohmyzsh/ohmyzsh/discussions/9849
hide-info = 0   # git_prompt_info
hide-status = 0 # git_prompt_status
hide-dirty = 0  # parse_git_dirty
