vbell off
vbell_msg ''

# Bind F11 and F12 (NOT F1 and F2) to previous and next screen window
bindkey -k F1 prev
bindkey -k F2 next

startup_message off

# Window list at the bottom.
# hardstatus alwayslastline
# hardstatus alwayslastline "%-w%{= BW}%50>%n %t%{-}%+w%<"
hardstatus ignore
# caption splitonly "%t"
# caption always "%{yK}%-Lw%50>%{Ky}%n %t%{-}%+Lw%<%{- Wk}%{yK} "
# hardstatus string "%-w%{= BW}%50>%n %t%{-}%+w%<"
# hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{=kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B}%Y-%m-%d %{W}%c %{g}]'
# caption always "%w"

#
defscrollback 9000 
termcapinfo * ti@:te@
# # termcapinfo xterm|xterms|xs ti@:te=\E[2J
# # termcapinfo xterm|xterms|xs|rxvt ti@:te@
# term "screen-256color"
# termcapinfo * 'hs:ts=\E]2;:fs=07:ds=\E]2;screen07'
term "xterm-256color"

# tells screen not to display text when a monitored window has activity (only change its indicator on the status line)
activity ''

# left right
bindkey "^[<" eval number !echo $WINDOW-1|bc
bindkey "^[>" eval number !echo $WINDOW+1|bc
bindkey "^[," prev
bindkey "^[." next

bind ` select 0

## make the shell in every window a login shell
## - to wlasnie powoduje wylaczenie
#shell -$SHELL

##remove some stupid / dangerous key bindings
bind k
bind ^k
bind .
bind ^\
bind \\
bind ^h
bind h


#caption always           "%?%F%{= Kk}%:%{=u kR}%?  %h %-024=%{+b} %C%a %D %d %M %Y%{= db}"



# http://www.frexx.de/xterm-256-notes/
# terminfo and termcap for nice 256 color terminal
# # allow bold colors - necessary for some reason
attrcolor b ".I" 
# # tell screen how to set colors. AB = background, AF=foreground 
# required for VIM
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm' 
# # erase background with current bg color 
defbce "on"

# some fix for vim
maptimeout 5
# http://askubuntu.com/questions/56570/how-do-i-copy-text-from-the-program-screen-to-my-clipboard
# Now, when you select something in screen copy/scrollback mode, and write paste buffer to a file with C-a >, 
bind b eval writebuf "exec sh -c 'xsel -nbi </tmp/screen-exchange'"
# bind b eval writebuf "exec /bin/bash -c 'xsel -b'"
# bind b eval writebuf "!xclip -selection clipboard /tmp/screen-exchange"
# bind y eval "exec sh -c 'xsel -bo >/tmp/screen-exchange'"
#
# no wait for copy mode
msgminwait 0

# idea z vima, ze nie wazne, czy zrobie z shiftem czy bez shiftwa i czy wciaz trzymam ctrl

# split focus select1 and return to 0
bind | eval "split -v" "focus" "select 1" "focus"
bind \ eval "split -v" "focus" "select 1" "focus"
bind ^\ eval "split -v" "focus" "select 1" "focus"

# change foucse on "f" - pasuje mi do komentady f w vimie i do polecania f w bashu
bind f focus
bind ^f focus

# only current region (aka Q) - akcepts lower q and with control
bind q only
bind ^q only




