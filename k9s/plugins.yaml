plugins:
  mydebug:
    shortCut: Shift-D
    #confirm: false
    description: Debug
    scopes:
    - containers
    command: kubectl
    background: false
    args:
    - debug
    - -it
    - -n
    - $NAMESPACE
    - $POD
    - --target
    - $NAME
    - --image
    # ubuntu  # no vi
    - busybox
    - --profile
    - general  
    # profiles:  https://github.com/kubernetes/enhancements/blob/master/keps/sig-cli/1441-kubectl-debug/README.md#debugging-profiles
    # general: allowed to access /proc/1/root/
    #
  mydebug2:
    shortCut: Shift-E
    #confirm: false
    description: Debug-netshoot
    scopes:
    - containers
    command: kubectl
    background: false
    args:
    - debug
    - -it
    - -n
    - $NAMESPACE
    - $POD
    - --target
    - $NAME
    - --image
    - nicolaka/netshoot
    - --profile
    - general  
    # profiles:  https://github.com/kubernetes/enhancements/blob/master/keps/sig-cli/1441-kubectl-debug/README.md#debugging-profiles
    # general: allowed to access /proc/1/root/
    
  mydebug-node:
    # https://github.com/derailed/k9s/blob/master/plugins/trace-dns.yaml#L61
    shortCut: Shift-E
    #confirm: false
    description: Debug-netshoot
    scopes:
    - nodes
    command: kubectl
    background: false
    args:
    - debug
    - -it
    - --profile=netadmin
    - --image=nicolaka/netshoot
    - node/$NAME
    #### TIP: netadmin has not /host volume, use following trick:
    ## ls /proc/1/root
    ## chroot /proc/1/root bash
    # Debugging profile. Options are "legacy", "general", "baseline", "netadmin", or "restricted".
    # sysadmin: does not work!
    # general: not-privileged: "A reasonable set of generic properties for each debugging journey"
    # netadmin: CAP_NETADMIN+privileged=true ### BEST ###
    # baseline: "The Baseline policy is aimed at ease of adoption for common containerized workloads while preventing known privilege escalations."
    # restricted: does not work (very limited) - "The Restricted policy is aimed at enforcing current Pod hardening best practices, at the expense of some compatibility"

  # nginx:
  #   shortCut: F12
  #   confirm: false
  #   description: "run nginx pod"
  #   scopes:
  #     - po
  #     - deploy
  #   command: kubectl
  #   background: false
  #   args:
  #     - -n
  #     - default
  #     - --context 
  #     - $CONTEXT
  #     - run
  #     - nginx
  #     - --image
  #     - nginx
  #
  # nginx-deploy:
  #   shortCut: F11
  #   confirm: true
  #   description: "create nginx deploy"
  #   scopes:
  #     - po
  #     - deploy
  #   command: kubectl
  #   background: false
  #   args:
  #     - -n
  #     - default
  #     - --context 
  #     - $CONTEXT
  #     - create 
  #     - deploy 
  #     - nginx
  #     - --image
  #     - nginx
  #
  # nginx-sts:
  #   shortCut: F10
  #   confirm: true
  #   description: "create nginx sts"
  #   scopes:
  #   - pods
  #   - sts
  #   command: kubectl
  #   background: false
  #   args:
  #     - -n
  #     - default
  #     - --context 
  #     - $CONTEXT
  #     - create 
  #     - -f 
  #     - "/root/.config/k9s/nsts.yml"

  # Defines a plugin to provide a `ctrl-l` shortcut to tail the logs while in pod view.
  mylog-pods:
    # Define a mnemonic to invoke the plugin
    shortCut: Ctrl-L
    # What will be shown on the K9s menu
    description: Pod logs
    # Collections of views that support this shortcut. (You can use `all`)
    scopes:
    - po
    # The command to run upon invocation. Can use Krew plugins here too!
    command: kubectl
    # Whether or not to run the command in background mode
    background: false
    # Defines the command arguments
    args:
    - logs
    - -f
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT

  # Defines a plugin to provide a `ctrl-l` shortcut to tail the logs while in pod view.
  mylog-pod-less:
    # Define a mnemonic to invoke the plugin
    shortCut: Shift-L
    # What will be shown on the K9s menu
    description: Pod logs less
    # Collections of views that support this shortcut. (You can use `all`)
    scopes:
    - po
    # The command to run upon invocation. Can use Krew plugins here too!
    command: bash
    # Whether or not to run the command in background mode
    background: false
    # Defines the command arguments
    args:
    - -c
    - "kubectl logs --timestamps $NAME -n $NAMESPACE --context $CONTEXT | less -S -R"

  # Sends logs over to jq for processing. This leverages kubectl plugin kubectl-jq.
  jqlogs:
    shortCut: Ctrl-J
    confirm: false
    description: "Logs (jq)"
    scopes:
      - po
    command: kubectl
    background: false
    args:
      - jq
      - $NAME
      - $NAMESPACE
      - $CONTEXT

  # Sends logs over to jq for processing. This leverages kubectl plugin kubectl-jq.
  #
  # $NAMESPACE – the selected resource namespace
  # $NAME – the selected resource name
  # $CONTAINER – the current container if applicable
  # $FILTER – the current filter if any
  # $KUBECONFIG – the KubeConfig location.
  # $CLUSTER the active cluster name
  # $CONTEXT the active context name
  # $USER the active user
  # $GROUPS the active groups
  # $POD while in a container view
  jqlogs-container:
    shortCut: Ctrl-J
    confirm: false
    description: "Logs (jq)"
    scopes:
      - containers
    command: bash
    background: false
    args:
      - -c
      # - "echo kubectl logs $POD -c $NAME -n $NAMESPACE --context $CONTEXT ; sleep 5"
      - "kubectl logs $POD -c $NAME -n $NAMESPACE --context $CONTEXT | jq -C '.' | less -S -R"

  # Defines a plugin to provide a `ctrl-l` shortcut to tail the logs while in pod view.
  mylog-deploy:
    # Define a mnemonic to invoke the plugin
    shortCut: Ctrl-L
    # What will be shown on the K9s menu
    description: Pod tail logs
    # Collections of views that support this shortcut. (You can use `all`)
    scopes:
    - deploy
    # The command to run upon invocation. Can use Krew plugins here too!
    command: kubectl
    # Whether or not to run the command in background mode
    background: false
    # Defines the command arguments
    args:
    - tail
    - -d
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --since
    - 5m

