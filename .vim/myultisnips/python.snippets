snippet main "main" b
if __name__ == '__main__':
	${1}
endsnippet

snippet str "str" b
def __str__(self):
	return '%s(%s)'%(self.__class__.__name__, id(self)${1})
endsnippet

snippet unicode "unicode" b
def __unicode__(self):
	return u'%s(%s)'%(self.__class__.__name__, id(self)${1})
endsnippet

snippet repr "just repr function" b
def __repr__(self):
	return '%s(%s)'%(self.__class__.__name__, id(self)${1})
endsnippet

snippet init "init" b
def __init__(self):
	${1}		
endsnippet

snippet super "super" b
super(${1:Class}, self).__init__(${2})
endsnippet


snippet de "function" b
def ${1:foo}($2):
    ${3:pass}
endsnippet


snippet dem "method" b
def ${1:foo}(self${2}):
    ${3:pass}
endsnippet


snippet cls "class with init without docsstrings" b
class ${1:Foo}(${2:object}):

    def __init__(self$3):
        ${4:pass}

endsnippet


snippet enc "encoding" b
# coding: utf-8
endsnippet


snippet doc "docstring" b
"""${1}"""
endsnippet


snippet mdoc "docstring" b
"""
${1}
"""
${2}		
endsnippet


snippet pres "print_result" b
from getmedia.system.tools import print_result
print_result(${1})
endsnippet

snippet classmethod "classmethod with function" b
@classmethod
def ${1:foo}(cls${2}):
    ${3:pass}
endsnippet

snippet staticmethod "classmethod with function" b
@staticmethod
def ${1:foo}(${2}):
    ${3:pass}
endsnippet
